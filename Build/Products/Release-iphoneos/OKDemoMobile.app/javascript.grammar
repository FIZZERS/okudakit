@symbols            = '||' '&&' '!=' '!==' '==' '===' '<=' '>=' '++' '--' '+=' '-=' '*=' '/=' '%=' '<<' '>>' '>>>' '<<=' '>>=' '>>>=' '&=' '^=' '|=';

@reportsCommentTokens = YES;
@commentState       = '/';
@singleLineComments = '//';
@multiLineComments  = '/*' '*/';

@start              = program;

if                  = 'if';
else                = 'else';
while               = 'while';
for                 = 'for';
in                  = 'in';
break               = 'break';
continue            = 'continue';
with                = 'with';
return              = 'return';
var                 = 'var';
delete              = 'delete';
new                 = 'new';
this                = 'this';
false               = 'false';
true                = 'true';
null                = 'null';
undefined           = 'undefined';
void                = 'void';
typeof              = 'typeof';
instanceof          = 'instanceof';
function            = 'function';

openCurly           = '{';
closeCurly          = '}';
openParen           = '(';
closeParen          = ')';
openBracket         = '[';
closeBracket        = ']';
comma               = ',';
dot                 = '.';
semi                = ';';
colon               = ':';
equals              = '=';
not                 = '!';
lt                  = '<';
gt                  = '>';
amp                 = '&';
pipe                = '|';
caret               = '^';
tilde               = '~';
question            = '?';
plus                = '+';
minus               = '-';
times               = '*';
div                 = '/';
mod                 = '%';

or                  = '||';
and                 = '&&';
ne                  = '!=';
isnot               = '!==';
eq                  = '==';
is                  = '===';
le                  = '<=';
ge                  = '>=';
plusPlus            = '++';
minusMinus          = '--';
plusEq              = '+=';
minusEq             = '-=';
timesEq             = '*=';
divEq               = '/=';
modEq               = '%=';
shiftLeft           = '<<';
shiftRight          = '>>';
shiftRightExt       = '>>>';
shiftLeftEq         = '<<=';
shiftRightEq        = '>>=';
shiftRightExtEq     = '>>>=';
andEq               = '&=';
xorEq               = '^=';
orEq                = '|=';

assignmentOperator  = equals | plusEq | minusEq | timesEq | divEq | modEq | shiftLeftEq | shiftRightEq | shiftRightExtEq | andEq | xorEq | orEq;

relationalOperator  = lt | gt | ge | le | instanceof;
equalityOperator    = eq | ne | is | isnot;

shiftOperator       = shiftLeft | shiftRight | shiftRightExt;
incrementOperator   = plusPlus | minusMinus;
unaryOperator       = tilde | delete | typeof | void;

multiplicativeOperator = times | div | mod;



// Program:
//           empty
//           Element Program

program             = element+;



//  Element:
//           function Identifier ( ParameterListOpt ) CompoundStatement
//           Statement

element             = func;
func                = function;
